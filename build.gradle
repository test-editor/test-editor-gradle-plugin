plugins {
    id 'com.gradle.plugin-publish' version '0.9.3'
    id 'net.researchgate.release' version '2.3.5'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven'
    id 'jacoco'
}

group 'org.testeditor'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    jcenter()
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    compile 'org.xtext:xtext-gradle-plugin:1.0.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'com.netflix.nebula:nebula-test:3.1.0'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

release {
    preTagCommitMessage = '[release] '
    tagCommitMessage = '[release] '
    tagTemplate = 'v${version}'
}

pluginBundle {
    website = 'https://github.com/test-editor/test-editor-gradle-plugin'
    vcsUrl = 'https://github.com/test-editor/test-editor-gradle-plugin'
    description = 'A gradle plugin that compiles Testeditor tests.'
    tags = ['testeditor', 'test', 'testing']

    plugins {
        lombokPlugin {
            id = 'org.testeditor.gradle-plugin'
            displayName = 'Testeditor Gradle plugin'
        }
    }

    mavenCoordinates {
        groupId = 'org.testeditor'
        artifactId = 'gradle-plugin'
    }
}

task updateReadmeVersion << {
    def versionPattern = /\d+.\d+(.\d+)?/
    def encoding = 'UTF-8'
    File file = new File("README.md")
    String text = file.getText(encoding)
    text = text.replaceAll("gradle-plugin' version '${versionPattern}'", "gradle-plugin' version '${project.version}'")
    file.setText(text, encoding)
}
updateReadmeVersion.shouldRunAfter tasks.getByName('confirmReleaseVersion')
tasks.getByName('preTagCommit').dependsOn updateReadmeVersion
