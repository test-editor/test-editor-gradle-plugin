plugins {
// These 2 plugins were meant to deploy on Gradle Plugin Site
//    id 'com.gradle.plugin-publish' version '0.10.0'
//    id 'net.researchgate.release' version '2.4.0'
// The following 2 plugins are for deployment on Bintray  
    id 'net.researchgate.release' version '2.7.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven'
    id 'jacoco'
}

apply from: "${rootDir}/gradle/publishing.gradle"

group 'org.testeditor'

sourceCompatibility = '1.10'
targetCompatibility = '1.10'

repositories {
    jcenter()
    maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
    compile 'org.xtext:xtext-gradle-plugin:2.0.1'

    // necessary for publishing using java 9,10 and probably 11, since some packages have been removed from standard runtime
    compile 'javax.activation:activation:1.1.1'
    compile 'javax.annotation:javax.annotation-api:1.3.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'com.netflix.nebula:nebula-test:7.1.0'
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

release {
    preTagCommitMessage = '[release] pre tag commit: '
    tagCommitMessage = '[release] creating tag: '
    newVersionCommitMessage = '[release] new version commit: '
    tagTemplate = 'v${version}'
}
/*  This bundle is for deployment on Gradle Plugin Site
pluginBundle {
    website = 'https://github.com/test-editor/test-editor-gradle-plugin'
    vcsUrl = 'https://github.com/test-editor/test-editor-gradle-plugin'
    description = 'A gradle plugin that compiles Testeditor tests.'
    tags = ['testeditor', 'test', 'testing']

    plugins {
        testeditorPlugin {
            id = 'org.testeditor.gradle-plugin'
            displayName = 'Test-Editor Gradle plugin'
        }
    }

    mavenCoordinates {
        groupId = 'org.testeditor'
        artifactId = 'gradle-plugin'
    }
}
*/

task updateReadmeVersion << {
    def versionPattern = /\d+.\d+(.\d+)?/
    def encoding = 'UTF-8'
    File file = new File("README.md")
    String text = file.getText(encoding)
    text = text.replaceAll("gradle-plugin' version '${versionPattern}'", "gradle-plugin' version '${project.version}'")
    file.setText(text, encoding)
}
updateReadmeVersion.shouldRunAfter tasks.getByName('confirmReleaseVersion')
tasks.getByName('preTagCommit').dependsOn updateReadmeVersion
